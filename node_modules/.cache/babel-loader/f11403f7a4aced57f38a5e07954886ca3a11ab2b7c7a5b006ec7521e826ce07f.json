{"ast":null,"code":"var _jsxFileName = \"/Users/peterpressman/Desktop/word-scramble-game/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport GameBoard from './components/GameBoard';\nimport { wordList } from './game';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [score, setScore] = useState(0);\n  const [currentWord, setCurrentWord] = useState('');\n  const [currentHint, setCurrentHint] = useState('');\n  const [scrambledLetters, setScrambledLetters] = useState([]);\n  const [showCelebration, setShowCelebration] = useState(false);\n\n  // Function to select a random word\n  const selectRandomWord = () => {\n    const randomIndex = Math.floor(Math.random() * wordList.length);\n    const wordObj = wordList[randomIndex];\n    setCurrentWord(wordObj.word);\n    setCurrentHint(wordObj.hint);\n\n    // Scramble the letters\n    const letters = wordObj.word.split('');\n    for (let i = letters.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [letters[i], letters[j]] = [letters[j], letters[i]];\n    }\n    setScrambledLetters(letters.map((letter, index) => ({\n      id: `tile-${index}`,\n      letter,\n      isUsed: false\n    })));\n  };\n\n  // Initialize game on first render\n  useEffect(() => {\n    selectRandomWord();\n  }, []);\n\n  // Handle successful word completion\n  const handleCorrectWord = () => {\n    setScore(prevScore => prevScore + 10);\n    setShowCelebration(true);\n  };\n\n  // Start a new word\n  const handleNextWord = () => {\n    setShowCelebration(false);\n    selectRandomWord();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Word Scramble Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"score\",\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"hint\",\n        children: [\"Hint: \", currentHint]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GameBoard, {\n        word: currentWord,\n        scrambledLetters: scrambledLetters,\n        onCorrectWord: handleCorrectWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => alert(currentHint),\n          children: \"Show Hint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextWord,\n          children: \"New Word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), showCelebration && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"celebration\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"celebration-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Great Job!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You solved the word!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextWord,\n          children: \"Next Word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4gdi33zxN1FmqJgmTtpln/uuqVY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","GameBoard","wordList","jsxDEV","_jsxDEV","App","_s","score","setScore","currentWord","setCurrentWord","currentHint","setCurrentHint","scrambledLetters","setScrambledLetters","showCelebration","setShowCelebration","selectRandomWord","randomIndex","Math","floor","random","length","wordObj","word","hint","letters","split","i","j","map","letter","index","id","isUsed","handleCorrectWord","prevScore","handleNextWord","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onCorrectWord","onClick","alert","_c","$RefreshReg$"],"sources":["/Users/peterpressman/Desktop/word-scramble-game/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport GameBoard from './components/GameBoard';\nimport { wordList } from './game';\n\nfunction App() {\n  const [score, setScore] = useState(0);\n  const [currentWord, setCurrentWord] = useState('');\n  const [currentHint, setCurrentHint] = useState('');\n  const [scrambledLetters, setScrambledLetters] = useState([]);\n  const [showCelebration, setShowCelebration] = useState(false);\n  \n  // Function to select a random word\n  const selectRandomWord = () => {\n    const randomIndex = Math.floor(Math.random() * wordList.length);\n    const wordObj = wordList[randomIndex];\n    setCurrentWord(wordObj.word);\n    setCurrentHint(wordObj.hint);\n    \n    // Scramble the letters\n    const letters = wordObj.word.split('');\n    for (let i = letters.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [letters[i], letters[j]] = [letters[j], letters[i]];\n    }\n    \n    setScrambledLetters(letters.map((letter, index) => ({\n      id: `tile-${index}`,\n      letter,\n      isUsed: false\n    })));\n  };\n  \n  // Initialize game on first render\n  useEffect(() => {\n    selectRandomWord();\n  }, []);\n  \n  // Handle successful word completion\n  const handleCorrectWord = () => {\n    setScore(prevScore => prevScore + 10);\n    setShowCelebration(true);\n  };\n  \n  // Start a new word\n  const handleNextWord = () => {\n    setShowCelebration(false);\n    selectRandomWord();\n  };\n  \n  return (\n    <div className=\"App\">\n      <h1>Word Scramble Game</h1>\n      <div className=\"game-container\">\n        <p className=\"score\">Score: {score}</p>\n        <p className=\"hint\">Hint: {currentHint}</p>\n        \n        <GameBoard \n          word={currentWord}\n          scrambledLetters={scrambledLetters}\n          onCorrectWord={handleCorrectWord}\n        />\n        \n        <div className=\"buttons\">\n          <button onClick={() => alert(currentHint)}>Show Hint</button>\n          <button onClick={handleNextWord}>New Word</button>\n        </div>\n      </div>\n      \n      {showCelebration && (\n        <div className=\"celebration\">\n          <div className=\"celebration-content\">\n            <h2>Great Job!</h2>\n            <p>You solved the word!</p>\n            <button onClick={handleNextWord}>Next Word</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import'./App.css';import GameBoard from'./components/GameBoard';import{wordList}from'./game';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[score,setScore]=useState(0);const[currentWord,setCurrentWord]=useState('');const[currentHint,setCurrentHint]=useState('');const[scrambledLetters,setScrambledLetters]=useState([]);const[showCelebration,setShowCelebration]=useState(false);// Function to select a random word\nconst selectRandomWord=()=>{const randomIndex=Math.floor(Math.random()*wordList.length);const wordObj=wordList[randomIndex];setCurrentWord(wordObj.word);setCurrentHint(wordObj.hint);// Scramble the letters\nconst letters=wordObj.word.split('');for(let i=letters.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[letters[i],letters[j]]=[letters[j],letters[i]];}setScrambledLetters(letters.map((letter,index)=>({id:`tile-${index}`,letter,isUsed:false})));};// Initialize game on first render\nuseEffect(()=>{selectRandomWord();},[]);// Handle successful word completion\nconst handleCorrectWord=()=>{setScore(prevScore=>prevScore+10);setShowCelebration(true);};// Start a new word\nconst handleNextWord=()=>{setShowCelebration(false);selectRandomWord();};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Word Scramble Game\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-container\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"score\",children:[\"Score: \",score]}),/*#__PURE__*/_jsxs(\"p\",{className:\"hint\",children:[\"Hint: \",currentHint]}),/*#__PURE__*/_jsx(GameBoard,{word:currentWord,scrambledLetters:scrambledLetters,onCorrectWord:handleCorrectWord}),/*#__PURE__*/_jsxs(\"div\",{className:\"buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>alert(currentHint),children:\"Show Hint\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleNextWord,children:\"New Word\"})]})]}),showCelebration&&/*#__PURE__*/_jsx(\"div\",{className:\"celebration\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"celebration-content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Great Job!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"You solved the word!\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleNextWord,children:\"Next Word\"})]})})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","GameBoard","wordList","jsx","_jsx","jsxs","_jsxs","App","score","setScore","currentWord","setCurrentWord","currentHint","setCurrentHint","scrambledLetters","setScrambledLetters","showCelebration","setShowCelebration","selectRandomWord","randomIndex","Math","floor","random","length","wordObj","word","hint","letters","split","i","j","map","letter","index","id","isUsed","handleCorrectWord","prevScore","handleNextWord","className","children","onCorrectWord","onClick","alert"],"sources":["/Users/peterpressman/Desktop/word-scramble-game/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport GameBoard from './components/GameBoard';\nimport { wordList } from './game';\n\nfunction App() {\n  const [score, setScore] = useState(0);\n  const [currentWord, setCurrentWord] = useState('');\n  const [currentHint, setCurrentHint] = useState('');\n  const [scrambledLetters, setScrambledLetters] = useState([]);\n  const [showCelebration, setShowCelebration] = useState(false);\n  \n  // Function to select a random word\n  const selectRandomWord = () => {\n    const randomIndex = Math.floor(Math.random() * wordList.length);\n    const wordObj = wordList[randomIndex];\n    setCurrentWord(wordObj.word);\n    setCurrentHint(wordObj.hint);\n    \n    // Scramble the letters\n    const letters = wordObj.word.split('');\n    for (let i = letters.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [letters[i], letters[j]] = [letters[j], letters[i]];\n    }\n    \n    setScrambledLetters(letters.map((letter, index) => ({\n      id: `tile-${index}`,\n      letter,\n      isUsed: false\n    })));\n  };\n  \n  // Initialize game on first render\n  useEffect(() => {\n    selectRandomWord();\n  }, []);\n  \n  // Handle successful word completion\n  const handleCorrectWord = () => {\n    setScore(prevScore => prevScore + 10);\n    setShowCelebration(true);\n  };\n  \n  // Start a new word\n  const handleNextWord = () => {\n    setShowCelebration(false);\n    selectRandomWord();\n  };\n  \n  return (\n    <div className=\"App\">\n      <h1>Word Scramble Game</h1>\n      <div className=\"game-container\">\n        <p className=\"score\">Score: {score}</p>\n        <p className=\"hint\">Hint: {currentHint}</p>\n        \n        <GameBoard \n          word={currentWord}\n          scrambledLetters={scrambledLetters}\n          onCorrectWord={handleCorrectWord}\n        />\n        \n        <div className=\"buttons\">\n          <button onClick={() => alert(currentHint)}>Show Hint</button>\n          <button onClick={handleNextWord}>New Word</button>\n        </div>\n      </div>\n      \n      {showCelebration && (\n        <div className=\"celebration\">\n          <div className=\"celebration-content\">\n            <h2>Great Job!</h2>\n            <p>You solved the word!</p>\n            <button onClick={handleNextWord}>Next Word</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}